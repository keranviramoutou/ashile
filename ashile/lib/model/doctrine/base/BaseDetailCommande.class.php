<?php

/**
 * BaseDetailCommande
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $typemateriel_id
 * @property integer $commande_id
 * @property clob $specification
 * @property integer $quantite
 * @property date $datelivraison
 * @property Typemateriel $Typemateriel
 * @property Commande $Commande
 * 
 * @method integer        getTypematerielId()  Returns the current record's "typemateriel_id" value
 * @method integer        getCommandeId()      Returns the current record's "commande_id" value
 * @method clob           getSpecification()   Returns the current record's "specification" value
 * @method integer        getQuantite()        Returns the current record's "quantite" value
 * @method date           getDatelivraison()   Returns the current record's "datelivraison" value
 * @method Typemateriel   getTypemateriel()    Returns the current record's "Typemateriel" value
 * @method Commande       getCommande()        Returns the current record's "Commande" value
 * @method DetailCommande setTypematerielId()  Sets the current record's "typemateriel_id" value
 * @method DetailCommande setCommandeId()      Sets the current record's "commande_id" value
 * @method DetailCommande setSpecification()   Sets the current record's "specification" value
 * @method DetailCommande setQuantite()        Sets the current record's "quantite" value
 * @method DetailCommande setDatelivraison()   Sets the current record's "datelivraison" value
 * @method DetailCommande setTypemateriel()    Sets the current record's "Typemateriel" value
 * @method DetailCommande setCommande()        Sets the current record's "Commande" value
 * 
 * @package    ash
 * @subpackage model
 * @author     regis Gravant
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseDetailCommande extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('detail_commande');
        $this->hasColumn('typemateriel_id', 'integer', 8, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 8,
             ));
        $this->hasColumn('commande_id', 'integer', 8, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 8,
             ));
        $this->hasColumn('specification', 'clob', 65535, array(
             'type' => 'clob',
             'length' => 65535,
             ));
        $this->hasColumn('quantite', 'integer', 3, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 3,
             ));
        $this->hasColumn('datelivraison', 'date', null, array(
             'type' => 'date',
             ));

        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Typemateriel', array(
             'local' => 'typemateriel_id',
             'foreign' => 'id'));

        $this->hasOne('Commande', array(
             'local' => 'commande_id',
             'foreign' => 'id'));
    }
}