<?php

/**
 * BasePersonne
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $quartier_id
 * @property string $nom
 * @property string $prenom
 * @property string $nom_nais
 * @property date $date_naissance
 * @property string $numen
 * @property string $commentaire
 * @property string $adressebat
 * @property string $adresserue
 * @property string $tel1
 * @property string $tel2
 * @property string $email
 * @property Quartier $Quartier
 * 
 * @method integer  getQuartierId()     Returns the current record's "quartier_id" value
 * @method string   getNom()            Returns the current record's "nom" value
 * @method string   getPrenom()         Returns the current record's "prenom" value
 * @method string   getNomNais()        Returns the current record's "nom_nais" value
 * @method date     getDateNaissance()  Returns the current record's "date_naissance" value
 * @method string   getNumen()          Returns the current record's "numen" value
 * @method string   getCommentaire()    Returns the current record's "commentaire" value
 * @method string   getAdressebat()     Returns the current record's "adressebat" value
 * @method string   getAdresserue()     Returns the current record's "adresserue" value
 * @method string   getTel1()           Returns the current record's "tel1" value
 * @method string   getTel2()           Returns the current record's "tel2" value
 * @method string   getEmail()          Returns the current record's "email" value
 * @method Quartier getQuartier()       Returns the current record's "Quartier" value
 * @method Personne setQuartierId()     Sets the current record's "quartier_id" value
 * @method Personne setNom()            Sets the current record's "nom" value
 * @method Personne setPrenom()         Sets the current record's "prenom" value
 * @method Personne setNomNais()        Sets the current record's "nom_nais" value
 * @method Personne setDateNaissance()  Sets the current record's "date_naissance" value
 * @method Personne setNumen()          Sets the current record's "numen" value
 * @method Personne setCommentaire()    Sets the current record's "commentaire" value
 * @method Personne setAdressebat()     Sets the current record's "adressebat" value
 * @method Personne setAdresserue()     Sets the current record's "adresserue" value
 * @method Personne setTel1()           Sets the current record's "tel1" value
 * @method Personne setTel2()           Sets the current record's "tel2" value
 * @method Personne setEmail()          Sets the current record's "email" value
 * @method Personne setQuartier()       Sets the current record's "Quartier" value
 * 
 * @package    ash
 * @subpackage model
 * @author     regis Gravant
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePersonne extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('personne');
        $this->hasColumn('quartier_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('nom', 'string', 100, array(
             'type' => 'string',
             'notnull' => true,
             'regexp' => '/^([\\s]*[\'\`-A-Za-zàáâãäåçèéêëìíîïðòóôõöùúûüýÿ ]+[\\s]*)+$/',
             'length' => 100,
             ));
        $this->hasColumn('prenom', 'string', 100, array(
             'type' => 'string',
             'regexp' => '/^([\\s]*[\'\`-A-Za-zàáâãäåçèéêëìíîïðòóôõöùúûüýÿ ]+[\\s]*)+$/',
             'length' => 100,
             ));
        $this->hasColumn('nom_nais', 'string', 100, array(
             'type' => 'string',
             'regexp' => '/^([\\s]*[\'\`-A-Za-zàáâãäåçèéêëìíîïðòóôõöùúûüýÿ ]+[\\s]*)+$/',
             'notnull' => false,
             'length' => 100,
             ));
        $this->hasColumn('date_naissance', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('numen', 'string', 13, array(
             'type' => 'string',
             'length' => 13,
             ));
        $this->hasColumn('commentaire', 'string', 200, array(
             'type' => 'string',
             'length' => 200,
             ));
        $this->hasColumn('adressebat', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('adresserue', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('tel1', 'string', 10, array(
             'type' => 'string',
             'regexp' => '/^([\\s]*[0-9]+[\\s]*)+$/',
             'length' => 10,
             ));
        $this->hasColumn('tel2', 'string', 10, array(
             'type' => 'string',
             'regexp' => '/^([\\s]*[0-9]+[\\s]*)+$/',
             'length' => 10,
             ));
        $this->hasColumn('email', 'string', 150, array(
             'type' => 'string',
             'email' => true,
             'length' => 150,
             ));

        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Quartier', array(
             'local' => 'quartier_id',
             'foreign' => 'id',
             'owningSide' => true));
    }
}
