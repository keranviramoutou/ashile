<?php

/**
 * ContratAvsTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class ContratAvsTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object ContratAvsTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('ContratAvs');
    }
	
	
	public function getTotalQHcontratacc($avs_id)
	{
	// Total quotité horaire contrats pour le personnel acc. selectionné à la date du jour
	//-------------------------------------------------------------------------------------
  	       	 $q = $this->createQuery('c')
			//->select ('c.id as contratId,a.id as avsid,sum(c.temps_hebdo) as temps_hebdo')
			->select ('c.id as contratId,a.id as avsid,c.temps_hebdo as temps_hebdo')
			->from('ContratAvs c')
			->innerJoin('c.Avs a ON a.id = c.avs_id')
			->where('avs_id = ?', $avs_id)
			->andWhere('date_fin_contrat >=?', date('Y-m-d', time()));
			//->groupby('c.avs_id');
			return $q->fetchArray();
	}
	
	public function ContratsAcc($avs_id)
	{
	// Liste des contrats pour l'accompagnant selectionne à la date du jour
	//----------------------------------------------------------------------
		$q = $this->createQuery('c')
			->select ('a.nom as avsnom,a.prenom as avsprenom,c.id as contratId,a.id as avsid,c.temps_hebdo as temps_hebdo,c.date_debut_contrat as date_debut_contrat,c.date_fin_contrat as date_fin_contrat,et.id as etid,et.rne as rne,et.nometabsco as etab,t.nomtypeetablissement as typetab,tc.typecontrat as typecontrat')
			->from('ContratAvs c')
			->innerJoin('c.Avs a ON a.id = c.avs_id')
			->leftjoin('c.Etabsco et ON  et.id = c.etabsco_id')
			->innerjoin('et.Typeetablissement t ON t.id = et.typeetablissement_id')
			->innerjoin('c.TypeContratAvs tc ON tc.id = c.typecontratavs_id')
			->where('avs_id = ?', $avs_id)
			->andWhere('date_fin_contrat >=?', date('Y-m-d', time()))
			->orderby('date_debut_contrat desc,date_fin_contrat desc');
			return $q->fetchArray();
         //---------------------------------------------------
	}
	
		public function ListeContratsAcc($avs_id)
	{
	// Liste des contrats pour l'accompagnant 
	//------------------------------------------
		$q = $this->createQuery('c')
			->select ('a.nom as avsnom,a.prenom as avsprenom,c.id as contratId,a.id as avsid,c.temps_hebdo as temps_hebdo,c.date_debut_contrat as date_debut_contrat,c.date_fin_contrat as date_fin_contrat,et.id as etid,et.rne as rne,et.nometabsco as etab,t.nomtypeetablissement as typetab,tc.typecontrat as typecontrat')
			->from('ContratAvs c')
			->innerJoin('c.Avs a ON a.id = c.avs_id')
			->leftjoin('c.Etabsco et ON  et.id = c.etabsco_id')
			->innerjoin('et.Typeetablissement t ON t.id = et.typeetablissement_id')
			->innerjoin('c.TypeContratAvs tc ON tc.id = c.typecontratavs_id')
			->where('avs_id = ?', $avs_id)
		    ->orderby('date_debut_contrat desc,date_fin_contrat desc');
			return $q->fetchArray();
         //---------------------------------------------------
	}
	
	public function getListeContratsAccavecPos($avs_id)
	{
	// Liste des contrats pour l'accompagnant avec position
	//-----------------------------------------------------
	            $q = $this->createQuery('c')
			    ->select ('c.id as contrat_avs_id,v.nom as avsnom,v.prenom as avsprenom,c.temps_hebdo as temps_hebdo,c.date_debut_contrat as date_debut_contrat,c.date_fin_contrat as date_fin_contrat,tc.typecontrat as typecontrat,
				p.id as position_id,p.datedebut as datedebut_pos,p.datefin as datefin_pos,p.typepositionavs_id as typepositionavs_id,t.libelletypepositionavs as libelletypepositionavs')
				->from('PositionAvs p')
				->innerjoin('p.TypePositionAvs t ON p.typepositionavs_id = t.id')
				->innerjoin('p.ContratAvs c on c.id = p.contratavs_id')
				->innerjoin('c.Avs v on v.id = c.avs_id')
				->innerjoin('c.TypeContratAvs tc ON tc.id = c.typecontratavs_id')
				->where('v.id =?', $avs_id)
				->orderby('datefin_pos desc');
                return $q->fetchArray();
         //---------------------------------------------------
	}
	
}