<?php

/**
 * OrientationTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class OrientationTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object OrientationTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('Orientation');
    }
	
		public function getDerScoMax($eleve_id)
	{
			//Dernière scolarisation
			//-----------------------------------------------------------------------
				$annee = Doctrine_Core::getTable('Anneescolaire')->getAnneeScolaireEnCours();
				$deb = $annee->getDatedebutanneescolaire();
				$fin = $annee->getDatefinanneescolaire();
	            //dernière scolarisation de l'élève en cours à la date du jour
				//--------------------------------------------------------------
				$q = $this->createQuery('c')
               ->select('max(o.id) as max_o_id,j.id as j_id,ty.id as ty_id,c.id as classe_id,e.nom as nom,e.prenom as prenom,et.nometabsco as nometabsco,et.rne as rne,e.secteur_id as secteur_id,s.libellesecteur as libellesecteur,e.id as eleveId,e.ine as ine,e.datenaissance as datenaissance,t.nomtypeetablissement as typetab,
			   o.id as orienId,o.datedebut as datedebut,o.datefin as datefin,n.nomniveauscolaire as nomniveauscolaire,ty.nomtypeclasse as nomlongtypeclasse,
			   e.adresseelevebat as adres1,e.adresseleverue as adres2,j.libelledemijournee as libelledemijournee')
                ->from('Orientation o')
                ->innerJoin('o.Eleve e ON e.id = o.eleve_id')
				->innerjoin('e.Secteur s ON s.id = e.secteur_id')
               ->leftJoin('o.Etabsco et ON o.etabsco_id = et.id')
                ->innerjoin('et.Typeetablissement t ON t.id = et.typeetablissement_id')
				->leftJoin('o.Niveauscolaire n ON o.niveauscolaire_id = n.id')
				->leftJoin('o.Classe c ON o.classe_id = c.id')
				->leftJoin('c.TypeClasse ty ON c.typeclasse_id = ty.id')
				->leftJoin('o.Demijournee j ON o.demijournee_id = j.id')
			   ->andwhere('o.eleve_id = ?', $eleve_id)
			   ->groupBy('e.id')
               ->orderBy('libellesecteur,et.nometabsco ASC,e.nom')
               ->addOrderBy('e.nom')
			   ->limit(1)
			    ->setHydrationMode(Doctrine::HYDRATE_ARRAY);
			  	return $q->fetchArray();
									
	}
			public function getDerSco($eleve_id)
	{
			//Dernière scolarisation
			//-----------------------------------------------------------------------
				$annee = Doctrine_Core::getTable('Anneescolaire')->getAnneeScolaireEnCours();
				$deb = $annee->getDatedebutanneescolaire();
				$fin = $annee->getDatefinanneescolaire();
				
	            //dernière scolarisation de l'élève en cours à la date du jour
				//--------------------------------------------------------------
				$q = $this->createQuery('c')
               ->select('j.id as j_id,ty.id as ty_id,c.id as classe_id,e.nom as nom,e.prenom as prenom,et.nometabsco as nometabsco,se.etabsco_id as et_id,set.id as secteur_id_etab,et.rne as rne,e.secteur_id as secteur_id,s.libellesecteur as libellesecteur,e.id as eleveId,e.ine as ine,e.datenaissance as datenaissance,t.nomtypeetablissement as typetab,
			   o.id as orienId,o.datedebut as datedebut,o.datefin as datefin,n.nomniveauscolaire as nomniveauscolaire,ty.nomtypeclasse as nomlongtypeclasse,et.id as etabsco_id,ty.nomtypeclasse as nomtypeclasse,et.degreetabsco as degreetabsco,
			   e.adresseelevebat as adres1,e.adresseleverue as adres2,j.libelledemijournee as libelledemijournee,ci.id,i.id as inclusion_id,ti.nomlongtypeclasse as classeinclusion,i.temspclasseintegration as temspclasseintegration,set.libellesecteur as libellesecteur_etab')
                ->from('Orientation o')
                ->innerJoin('o.Eleve e ON e.id = o.eleve_id')
				->innerjoin('e.Secteur s ON s.id = e.secteur_id')
               ->innerJoin('o.Etabsco et ON o.etabsco_id = et.id')
			    ->innerJoin('et.SecteurEtabscos se ON se.etabsco_id = et.id')
				->innerJoin('se.Secteur set ON se.secteur_id = set.id')
                ->innerjoin('et.Typeetablissement t ON t.id = et.typeetablissement_id')
				->leftJoin('o.Niveauscolaire n ON o.niveauscolaire_id = n.id')
				->leftJoin('o.Classe c ON o.classe_id = c.id')
				->leftJoin('c.TypeClasse ty ON c.typeclasse_id = ty.id')
				->leftJoin('o.Demijournee j ON o.demijournee_id = j.id')
				->leftJoin('o.Inclusion i ON o.inclusion_id = i.id')
				->leftJoin('i.Classe ci ON i.classe_id = ci.id')
				->leftJoin('ci.TypeClasse ti ON ci.typeclasse_id = ti.id')
                ->andWhere('o.datedebut >=?', $deb)
               ->andWhere('o.datefin <=?', $fin)
              // ->andWhere('e.datesortie IS NULL')
			   ->andwhere('o.eleve_id = ?', $eleve_id)
			   ->andWhere('o.datefin >=?', date('Y-m-d', time()))
               ->orderBy('libellesecteur,et.nometabsco ASC,e.nom')
               ->addOrderBy('e.nom')
			   ->limit(1)
			    ->setHydrationMode(Doctrine::HYDRATE_ARRAY);
			  	return $q->fetchArray();
									
	}
	
			public function getListDerSco()
	{
			//Dernière scolarisation
			//-----------------------------------------------------------------------
				$annee = Doctrine_Core::getTable('Anneescolaire')->getAnneeScolaireEnCours();
				$deb = $annee->getDatedebutanneescolaire();
				$fin = $annee->getDatefinanneescolaire();
				
	            
				$q = $this->createQuery('c')
               ->select('j.id as j_id,ty.id as ty_id,c.id as classe_id,e.nom as nom,e.prenom as prenom,et.nometabsco as nometabsco,et.rne as rne,e.secteur_id as secteur_id,s.libellesecteur as libellesecteur,e.id as eleve_id,e.ine as ine,e.datenaissance as datenaissance,t.nomtypeetablissement as typetab,
			   o.id as orienId,o.datedebut as datedebut,o.datefin as datefin,n.nomniveauscolaire as nomniveauscolaire,ty.nomtypeclasse as nomlongtypeclasse,et.id as etabsco_id,ty.nomtypeclasse as nomtypeclasse,
			   e.adresseelevebat as adres1,e.adresseleverue as adres2,j.libelledemijournee as libelledemijournee,ci.id,i.id as inclusion_id,ti.nomlongtypeclasse as classeinclusion,i.temspclasseintegration as temspclasseintegration')
                ->from('Orientation o')
                ->innerJoin('o.Eleve e ON e.id = o.eleve_id')
				->innerjoin('e.Secteur s ON s.id = e.secteur_id')
               ->innerJoin('o.Etabsco et ON o.etabsco_id = et.id')
                ->innerjoin('et.Typeetablissement t ON t.id = et.typeetablissement_id')
				->leftJoin('o.Niveauscolaire n ON o.niveauscolaire_id = n.id')
				->leftJoin('o.Classe c ON o.classe_id = c.id')
				->leftJoin('c.TypeClasse ty ON c.typeclasse_id = ty.id')
				->leftJoin('o.Demijournee j ON o.demijournee_id = j.id')
				->leftJoin('o.Inclusion i ON o.inclusion_id = i.id')
				->leftJoin('i.Classe ci ON i.classe_id = ci.id')
				->leftJoin('ci.TypeClasse ti ON ci.typeclasse_id = ti.id')
                ->andWhere('o.datedebut >=?', $deb)
               ->andWhere('o.datefin <=?', $fin)
              // ->andWhere('e.datesortie IS NULL')
			  // ->andwhere('o.eleve_id = ?', $eleve_id)
			   ->andWhere('o.datefin >=?', date('Y-m-d', time()))
               ->orderBy('libellesecteur,et.nometabsco ASC,e.nom')
               ->addOrderBy('e.nom')
			  // ->limit(1)
			    ->setHydrationMode(Doctrine::HYDRATE_ARRAY);
			  	return $q->fetchArray();
									
	}
	
	public function getListeSco($eleve_id)
	{
			//liste des scolarisations pour un élève 
			//------------------------------------------
			$annee = Doctrine_Core::getTable('Anneescolaire')->getAnneeScolaireEnCours();
				$deb = $annee->getDatedebutanneescolaire();
				$fin = $annee->getDatefinanneescolaire();
	           
				$q = $this->createQuery('c')
               ->select('sc.id as sc_id,se.etabsco_id as se_etabscoid,j.id as j_id,ty.id as ty_id,c.id as classe_id,e.nom as nom,e.prenom as prenom,et.nometabsco as nometabsco,et.rne as rne,e.secteur_id as secteur_id,s.libellesecteur as libellesecteur,e.id as eleveId,e.ine as ine,e.datenaissance as datenaissance,t.nomtypeetablissement as typetab,
			   o.id as orienId,o.datedebut as datedebut,o.datefin as datefin,n.nomniveauscolaire as nomniveauscolaire,ty.nomtypeclasse as nomlongtypeclasse,
			   j.libelledemijournee as libelledemijournee,sc.libellesecteur as libellesecteur_etab')
                ->from('Orientation o')
                ->innerJoin('o.Eleve e ON e.id = o.eleve_id')
				->innerjoin('e.Secteur s ON s.id = e.secteur_id')
               ->innerJoin('o.Etabsco et ON o.etabsco_id = et.id')
                ->innerjoin('et.Typeetablissement t ON t.id = et.typeetablissement_id')
				->leftJoin('o.Niveauscolaire n ON o.niveauscolaire_id = n.id')
				->leftJoin('o.Classe c ON o.classe_id = c.id')
				->leftJoin('c.TypeClasse ty ON c.typeclasse_id = ty.id')
				->leftJoin('o.Demijournee j ON o.demijournee_id = j.id')
		    	->leftjoin('et.SecteurEtabscos se ON et.id = se.etabsco_id')
				->leftjoin('se.Secteur sc ON sc.id = se.secteur_id')
               // ->andWhere('o.datedebut >=?', $deb)
              // ->andWhere('o.datefin <=?', $fin)
              // ->andWhere('e.datesortie IS NULL')
			   ->andwhere('o.eleve_id = ?', $eleve_id)
               ->orderBy('libellesecteur,et.nometabsco ASC,e.nom')
               ->addOrderBy('e.nom')
			    ->setHydrationMode(Doctrine::HYDRATE_ARRAY);
			  	return $q->fetchArray();
									
	}
	
		
	public function getCompareSecteurScoSecteurEleve()
	{
			//list des élèves avec le secteur de la scolarité en cours différent du secteur de la fiche élève
			//-----------------------------------------------------------------------------------------------------
			$annee = Doctrine_Core::getTable('Anneescolaire')->getAnneeScolaireEnCours();
			$deb = $annee->getDatedebutanneescolaire();
			$fin = $annee->getDatefinanneescolaire();
	           
				$q = $this->createQuery('c')
               ->select('sc.id as sc_id,se.etabsco_id as se_etabscoid,e.nom as nom,e.prenom as prenom,et.id as etab_id,et.nometabsco as nometabsco,et.rne as rne,e.secteur_id as secteur_id_eleve,s.libellesecteur as libellesecteur,e.id as eleve_id,e.ine as ine,e.datenaissance as datenaissance,
			   o.id as orienId,o.datedebut as datedebut,o.datefin as datefin,sc.libellesecteur as libellesecteur_etab,se.secteur_id as secteur_id_etab,t.nomtypeetablissement as typetab')
               ->from('Orientation o')
               ->innerJoin('o.Eleve e ON e.id = o.eleve_id')
			   ->innerjoin('e.Secteur s ON s.id = e.secteur_id')
               ->innerJoin('o.Etabsco et ON o.etabsco_id = et.id')
	           ->innerjoin('et.Typeetablissement t ON t.id = et.typeetablissement_id')
    	       ->innerjoin('et.SecteurEtabscos se ON et.id = se.etabsco_id')
			   ->innerjoin('se.Secteur sc ON sc.id = se.secteur_id')
               ->Where('o.datedebut >=?', $deb)
	           ->andWhere('o.datefin <=?', $fin)
		       ->andWhere('o.datefin >=?', date('Y-m-d', time()))
		       ->andWhere('o.datedebut <=?', date('Y-m-d', time()))
			   ->andwhere('se.secteur_id != e.secteur_id')
			  ->andWhere('et.rne !=?', '9740061Y')
               ->orderBy('e.nom')
			   ->setHydrationMode(Doctrine::HYDRATE_ARRAY);
			  	return $q->fetchArray();
									
	}
	
	public function getHistoSco($eleve_id)
	{
	            //historique scolarisation de l'élève 
				//----------------------------------
				$q = $this->createQuery('c')
                ->select('ty.id as ty_id,c.id as classe_id,et.nometabsco as nometabsco,et.rne as rne,t.nomtypeetablissement as typetab,
			    o.id as orienId,o.datedebut as datedebut,o.datefin as datefin,ty.nomlongtypeclasse as nomlongtypeclasse')
                ->from('Orientation o')
                 ->innerJoin('o.Etabsco et ON o.etabsco_id = et.id')
                ->innerjoin('et.Typeetablissement t ON t.id = et.typeetablissement_id')
				->leftJoin('o.Classe c ON o.classe_id = c.id')
				->leftJoin('c.TypeClasse ty ON c.typeclasse_id = ty.id')
			    ->andwhere('o.eleve_id = ?', $eleve_id)
				->orderby ('o.datefin desc')
			  // ->limit(1)
			   ->setHydrationMode(Doctrine::HYDRATE_ARRAY);
				return $q->fetchArray();
									
	}
}
