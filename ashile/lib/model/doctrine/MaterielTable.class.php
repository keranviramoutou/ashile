<?php

/**
 * MaterielTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class MaterielTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object MaterielTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('Materiel');
    }
    
		
	public function getDernierMouv2($id)
	{
		    // on cherche le dernier mouvement du materiel
		$dernierMouv = Doctrine_Query::create()
					->select('mouv.id as mouvement_id, m.id as materiel_id')
					->from('MouvementMateriel mouv')
					->leftJoin('mouv.Materiel m ON mouv.materiel_id = m.id')
					->where('m.id = ?', $id)
					->orderBy('mouv.id DESC LIMIT 1')
					->fetchArray();
					
			return $dernierMouv;		
	}	
	
	
		public function getMateriel($materiel_id)
	{
		//selection d'un matériel avec ses mouvements
		//---------------------------------------------
	            $q = $this->createQuery('c')
	             ->select ('m.id as id, q.libellemarque as marque,s.datefin as datefin, f.nommouvement as nommouvement, s.id as mouvementId, m.marque_id as marqueId,t.libelletypemateriel as nom, m.typemateriel_id as typeMaterielId, m.libellemateriel as libelleMateriel, m.caracteristiquemateriel as caracteristiqueMateriel,
				 m.numeromateriel as numeroMateriel, m.commentaire as commentaire')
                ->from('Materiel m')
                ->leftjoin('m.Typemateriel t ON  t.id =  m.typemateriel_id')
                ->leftjoin('m.Marque q ON  q.id =  m.marque_id')
                ->leftJoin('m.MouvementMateriel s ON s.materiel_id = m.id')
                ->leftJoin('s.Mouvement f ON f.id = s.mouvement_id')
				->where ('m.id = ?', $materiel_id);
                return $q->fetchArray();
	}
	public function getMaterielenStock($typemateriel_id)
	{
		// selection du matériel immatriculée en STOCK  aujourd'hui en fonction du type
       //----------------------------------------------------------------------------------	
		$q = $this->createQuery('c')
	             ->select ('m.id as id, q.libellemarque as marque,s.datefin as datefin, f.nommouvement as nommouvement, s.id as mouvementId, m.marque_id as marqueId,t.libelletypemateriel as nom, m.typemateriel_id as typeMaterielId, m.libellemateriel as libelleMateriel, m.caracteristiquemateriel as caracteristiqueMateriel,
				 m.numeromateriel as numeroMateriel, m.commentaire as commentaire')
                ->from('Materiel m')
                ->leftjoin('m.Typemateriel t ON  t.id =  m.typemateriel_id')
                ->leftjoin('m.Marque q ON  q.id =  m.marque_id')
                ->leftJoin('m.MouvementMateriel s ON s.materiel_id = m.id')
                ->leftJoin('s.Mouvement f ON f.id = s.mouvement_id')
				->where('m.typemateriel_id=?', $typemateriel_id )
				->andwhere('f.nommouvement LIKE "%STOCK%"')
				->andWhere('m.numeromateriel IS NOT NULL')
				->andwhere ('s.datefin IS  NULL');
				return $q->fetchArray();
		}	
   
}
